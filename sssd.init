#!/bin/sh
#
#
# chkconfig: - 12 88
# processname: sssd
# pidfile: /var/run/sssd.pid
# description: Provides a set of daemons to manage access to remote directories
#              and authentication mechanisms. It provides an NSS and PAM
#              interface toward the system and a pluggable backend system to
#              connect to multiple different account sources. It is also the
#              basis to provide client auditing and policy services for projects
#              like FreeIPA.
#
### BEGIN INIT INFO
# Provides: sssd
# Required-Start: $remote_fs $time
# Should-Start: $syslog
# Should-Stop: $null
# Required-Stop: $null
# Default-Start: 3 4 5
# Default-Stop: 0 1 6
# Short-Description: System Security Services Daemon
# Description: Provides a set of daemons to manage access to remote directories
#              and authentication mechanisms. It provides an NSS and PAM
#              interface toward the system and a pluggable backend system to
#              connect to multiple different account sources. It is also the
#              basis to provide client auditing and policy services for projects
#              like FreeIPA.
### END INIT INFO

# Do not load RH compatibility interface.
WITHOUT_RC_COMPAT=1

# Source function library.
. /etc/init.d/functions

SERVICE=sssd
PIDFILE=/var/run/$SERVICE.pid
LOCKFILE=/var/lock/subsys/$SERVICE

SourceIfNotEmpty /etc/sysconfig/$SERVICE

RETVAL=0

start() {
	start_daemon --pidfile "$PIDFILE" --lockfile "$LOCKFILE" --expect-user root -- "$SERVICE" -f -D
	RETVAL=$?
	return $RETVAL
}

stop() {
	stop_daemon --pidfile $PIDFILE --lockfile "$LOCKFILE" --expect-user root -- "$SERVICE"
	RETVAL=$?
	return $RETVAL
}

reload() {
	msg_reloading "$SERVICE"
	stop_daemon --pidfile "$PIDFILE" --expect-user root -HUP -- "$SERVICE"
	RETVAL=$?
	return $RETVAL
}

restart() {
	stop
	start
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		restart
		;;
	reload)
		reload
		;;
	status)
		status --pidfile "$PIDFILE" --expect-user root -- "$SERVICE"
		RETVAL=$?
		;;
	condstop)
		if [ -e "$LOCKFILE" ]; then
			stop
		fi
		;;
	condreload)
		if [ -e "$LOCKFILE" ]; then
			reload
		fi
		;;
	condrestart)
		if [ -e "$LOCKFILE" ]; then
			restart
		fi
		;;
	*)
		msg_usage "${0##*/} {start|stop|status|reload|restart|condstop|condrestart|condreload}"
		RETVAL=1
esac

exit $RETVAL
